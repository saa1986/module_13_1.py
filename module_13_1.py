import asyncio  # Импортируем модуль asyncio для работы с асинхронным программированием


async def start_strongman(name, power):
    # Определяем асинхронную функцию, которая принимает имя силача и его мощность
    print(f'Силач {name} начал соревнования.')  # Выводим сообщение о начале соревнования

    for i in range(1, 6):  # Цикл от 1 до 5 для поднятия 5 шаров
        await asyncio.sleep(1 / power)  # Задержка обратно пропорциональна мощности (power)
        print(f'Силач {name} поднял {i} шар')  # Выводим сообщение о поднятом шаре

    print(f'Силач {name} закончил соревнования.')  # Выводим сообщение о завершении соревнований


async def start_tournament():
    # Определяем асинхронную функцию для старта турнира
    tasks = [
        start_strongman('Pasha', 3),  # Создаем задачу для первого участника с именем и мощностью
        start_strongman('Denis', 4),  # Создаем задачу для второго участника
        start_strongman('Apollon', 5)  # Создаем задачу для третьего участника
    ]

    # Используем asyncio.gather для ожидания выполнения всех задач одновременно
    await asyncio.gather(*tasks)


# Запуск асинхронной функции start_tournament
if __name__ == '__main__':
    asyncio.run(start_tournament())  # Запускаем основную асинхронную функцию